#!/usr/bin/env zsh
#test

set -e
dir=$(cd -P -- "$(dirname -- "$0")" && pwd -P)
. $dir/config
. $dir/util

stage="macOS user session configuration stage"
echo_stage_status 0 "$stage"

install_brew() {
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
}

install_pkg_brew() {
  if [ -s $dir/pkg_brew_tap ]; then
    brew tap $(echo $(cat $dir/pkg_brew_tap))
  fi

  if [ -s $dir/pkg_brew ]; then
    brew install $(echo $(cat $dir/pkg_brew))
  fi

  if [ -s $dir/pkg_brew_cask ]; then
    brew install --cask $(echo $(cat $dir/pkg_brew_cask))
  fi
}

install_nix_user_config() {
  if [ -s "$cf_git_url_nix_user_config" ]; then
    temp_path=$(mktemp -d)
    git clone --separate-git-dir=$HOME/.dotfiles_git $cf_git_url_nix_user_config $temp_path
    rsync --recursive --verbose --exclude '.git' $temp_path/ $HOME
    git --git-dir=$HOME/.dotfiles_git/ --work-tree=$HOME config --local status.showUntrackedFiles no
    git --git-dir=$HOME/.dotfiles_git/ --work-tree=$HOME submodule update --init
  fi
}

install_nvim_user_config() {
  if [ -s "$cf_git_url_nvim_user_config" ]; then
    if [ ! -d $HOME/.config ]; then
      mkdir -p $HOME/.config
    fi

    git clone $cf_git_url_nvim_user_config $HOME/.config/nvim
  fi
}

install_nodejs() {
  if [ -s "$cf_nvm_default_nodejs_version" ]; then
    mkdir -p $HOME/.nvm
    export NVM_DIR=$HOME/.nvm
    . $(brew --prefix)/opt/nvm/nvm.sh
    nvm install $cf_nvm_default_nodejs_version
    nvm alias default $cf_nvm_default_nodejs_version
    nvm use default
  fi
}

install_pkg_npm() {
  if [ -s $dir/pkg_npm ]; then
    npm install --global $(echo $(cat $dir/pkg_npm))
  fi
}

main() {
  fn_call \
    "install_brew" \
    "install_pkg_brew" \
    "install_nix_user_config" \
    "install_nvim_user_config" \
    "install_nodejs" \
    "install_pkg_npm"
}

main
echo_stage_status 1 "$stage"
