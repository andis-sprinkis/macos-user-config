#!/usr/bin/env zsh
set -e
dir=$(cd -P -- "$(dirname -- "$0")" && pwd -P)
. $dir/util

install_brew() {
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  echo 'eval $(/opt/homebrew/bin/brew shellenv)' >> /Users/$USER/.zprofile
  eval $(/opt/homebrew/bin/brew shellenv)
}

install_pkg_brew() {
  if [ -s $dir/pkg_brew_tap ]; then
    brew tap $(echo $(cat $dir/pkg_brew_tap))
  fi

  if [ -s $dir/pkg_brew ]; then
    brew install $(echo $(cat $dir/pkg_brew))
  fi

  if [ -s $dir/pkg_brew_cask ]; then
    brew install --cask $(echo $(cat $dir/pkg_brew_cask))
  fi
}

install_user_config() {
  local dir_cfg_git=$HOME/.dotfiles_git
  local temp_path=$(mktemp -d)
  git clone --separate-git-dir=$dir_cfg_git https://github.com/andis-sprinkis/nix-user-config $temp_path
  rsync --recursive --verbose --exclude '.git' $temp_path/ $HOME
  git --git-dir=$dir_cfg_git --work-tree=$HOME config --local status.showUntrackedFiles no
  git --git-dir=$dir_cfg_git --work-tree=$HOME submodule update --init
}

install_nodejs() {
  export VOLTA_HOME="$HOME/.volta"
  PATH="$VOLTA_HOME/bin:$PATH"
  volta install "node@18.13.20"
}

install_pkg_npm() {
  if [ -s $dir/pkg_npm ]; then
    npm install --global $(echo $(cat $dir/pkg_npm))
  fi
}

stage_install_brew() {
  stage="Installing brew"
  print_stage_status 0 "$stage"

  fn_call "install_brew"

  print_stage_status 1 "$stage"
}

stage_post_install_brew() {
  stage="Installing user packages and configuration"
  print_stage_status 0 "$stage"

  fn_call "install_pkg_brew"
  fn_call "install_user_config"
  fn_call "install_nodejs"
  fn_call "install_pkg_npm"

  print_stage_status 1 "$stage"
}

[ -z "$1" ] || [ "$1" -eq "0" ] && stage_install_brew
[ "$1" ] && [ "$1" -eq "1" ] && stage_post_install_brew
