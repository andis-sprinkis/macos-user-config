#!/usr/bin/env zsh
set -e
dir=$(cd -P -- "$(dirname -- "$0")" && pwd -P)

print_br_bottom() { echo $1; echo }
print_br_top() { echo; echo $1 }
print_br_both() { echo; echo $1; echo }

fn_call() {
  for fn in "$@"; do
    print_br_bottom "Function $fn has started..."
    $fn
    print_br_bottom "Function $fn has completed!"
  done
}

print_stage_status() {
  [ "$1" -eq "0" ] && print_br_bottom "Starting $2 stage..." 
  [ "$1" -eq "1" ] && print_br_bottom "$2 stage has completed!"
}

install_brew() {
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  eval $(/opt/homebrew/bin/brew shellenv)
}

install_pkg_brew() {
  [ -s $dir/pkg_brew_tap ] && brew tap $(echo $(cat $dir/pkg_brew_tap))
  [ -s $dir/pkg_brew ] && brew install $(echo $(cat $dir/pkg_brew))
  [ -s $dir/pkg_brew_cask ] && brew install --cask $(echo $(cat $dir/pkg_brew_cask))
}

install_user_config() {
  mkdir -p "$HOME/.local/state"
  dir_git="$HOME/.local/state/dotfiles_git"
  dir_tmp=$(mktemp -d)
  git clone --separate-git-dir=$dir_git https://github.com/andis-sprinkis/nix-user-config $dir_tmp
  rsync --recursive --verbose --exclude '.git' $dir_tmp/ $HOME
  git --git-dir=$dir_git --work-tree=$HOME config --local status.showUntrackedFiles no
  git --git-dir=$dir_git --work-tree=$HOME submodule update --init
}

install_pkg_npm() {
  export VOLTA_HOME="$HOME/.local/share/volta"
  PATH="$VOLTA_HOME/bin:$PATH"
  [ -s $dir/pkg_npm ] && volta install $(echo $(cat $dir/pkg_npm))
}

install_nvim_config() {
  mkdir "$HOME/.config"
  cd "$HOME/.config"
  git clone https://github.com/andis-sprinkis/nvim-user-config nvim
}

stage_install_brew() {
  stage="Installing brew"
  print_stage_status 0 "$stage"

  fn_call "install_brew"

  print_stage_status 1 "$stage"
}

stage_post_install_brew() {
  stage="Installing user packages and configuration"
  print_stage_status 0 "$stage"

  fn_call "install_pkg_brew"
  fn_call "install_user_config"
  fn_call "install_pkg_npm"
  fn_call "install_nvim_config"

  print_stage_status 1 "$stage"
}

[ -z "$1" ] || [ "$1" -eq "0" ] && stage_install_brew
[ "$1" ] && [ "$1" -eq "1" ] && stage_post_install_brew
